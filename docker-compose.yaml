services:
  back-end-01: &back-end
    hostname: back-end-01
    build:
      context: .
      dockerfile: ./back-end/Dockerfile
    restart: on-failure
    depends_on:
      - postgres
    volumes:
      - ./back-end:/home/root/app
      - private_node_modules:/home/root/app/node_modules
    env_file:
      - ./back-end/.env
    networks:
      - internal

  back-end-02:
    <<: *back-end
    hostname: back-end-02

  back-end-03:
    <<: *back-end
    hostname: back-end-03

  load-balancer:
    image: nginx:latest
    restart: on-failure
    depends_on:
      - back-end-01
      - back-end-02
      - back-end-03
    ports:
      - 80:80
    volumes:
      - ./back-end/default.conf:/etc/nginx/nginx.conf:ro
    networks:
      - internal

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - internal

  front-end:
    build:
      context: .
      dockerfile: ./front-end/Dockerfile
    restart: on-failure
    depends_on:
      - load-balancer
    ports:
      - 8080:80
    env_file:
      - ./front-end/.env
    networks:
      - internal

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "16686:16686"  # UI
      - "4317:4317"    # OTLP/gRPC
      - "4318:4318"    # OTLP/HTTP
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  postgres:
  private_node_modules: